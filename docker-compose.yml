version: '3.8'

services:
  # Web application
  web:
    build: .
    container_name: ejs-demo-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/ejs-demo
      - SESSION_SECRET=your-production-session-secret-change-this
    depends_on:
      - mongodb
    networks:
      - app-network
    volumes:
      - app-logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: ejs-demo-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=ejs-demo
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongodb-data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: mongod --auth

  # MongoDB Express (Web-based MongoDB admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: ejs-demo-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin123@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - app-network

  # Redis (Optional - for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: ejs-demo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Nginx (Reverse proxy and static file serving)
  nginx:
    image: nginx:alpine
    container_name: ejs-demo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  nginx-logs:
    driver: local
